# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-03-19 16:05
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.crypto
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=django.utils.crypto.get_random_string, max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disabled', models.BooleanField(db_index=True, default=False)),
                ('storytime', models.TextField(blank=True, null=True)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=django.utils.crypto.get_random_string, max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disabled', models.BooleanField(db_index=True, default=False)),
                ('storytime', models.TextField(blank=True, null=True)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
                ('state', models.CharField(blank=True, max_length=128, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('type', models.CharField(choices=[('intern', 'Intern'), ('full_time', 'Full-time'), ('part_time', 'Part-time'), ('contractor', 'Contractor')], max_length=16)),
                ('level', models.CharField(choices=[('entry', 'Entry'), ('mid', 'Mid'), ('senior', 'Senior')], max_length=16)),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], default='open', max_length=16)),
                ('title', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=django.utils.crypto.get_random_string, max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disabled', models.BooleanField(db_index=True, default=False)),
                ('storytime', models.TextField(blank=True, null=True)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('segment', models.IntegerField()),
                ('index', models.IntegerField()),
                ('context', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={})),
            ],
        ),
        migrations.CreateModel(
            name='QuestionTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=django.utils.crypto.get_random_string, max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disabled', models.BooleanField(db_index=True, default=False)),
                ('storytime', models.TextField(blank=True, null=True)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('type', models.CharField(choices=[('multi_choice_multi_select', 'Multiple Choice Multiple Select'), ('multi_choice_single_select', 'Multiple Choice Single Select'), ('open_ended_paragraph', 'Open-ended Paragraph'), ('open_ended_multi_fields', 'Open-ended Multiple Fields'), ('reorder', 'Reorder'), ('drag_drop', 'Drag & Drop'), ('type_ahead', 'Type Ahead'), ('dropdown', 'Dropdown'), ('rank_order_table', 'Rank Order Table'), ('rank_order_matrix', 'Rank Order Matrix')], max_length=32)),
                ('prompt', models.TextField()),
                ('note', models.TextField(blank=True, null=True)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={})),
            ],
            options={
                'verbose_name': 'Question Template',
                'verbose_name_plural': 'Question Templates',
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=django.utils.crypto.get_random_string, max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disabled', models.BooleanField(db_index=True, default=False)),
                ('storytime', models.TextField(blank=True, null=True)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('expiration_time', models.IntegerField()),
                ('type', models.CharField(choices=[('hiring_manager', 'Hiring Manager'), ('exemplar', 'Exemplar'), ('applicant', 'Applicant')], max_length=16)),
                ('version', models.IntegerField(default=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyInvitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=django.utils.crypto.get_random_string, max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disabled', models.BooleanField(db_index=True, default=False)),
                ('storytime', models.TextField(blank=True, null=True)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('state', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In-progress'), ('success', 'success'), ('failed', 'Failed')], default='pending', max_length=16)),
                ('type', models.CharField(choices=[('exemplar', 'Exemplar'), ('applicant', 'Applicant')], max_length=16)),
                ('emails', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), size=None)),
            ],
            options={
                'verbose_name': 'Survey Invitation',
                'verbose_name_plural': 'Survey Invitations',
            },
        ),
        migrations.CreateModel(
            name='SurveyResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=django.utils.crypto.get_random_string, max_length=64, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disabled', models.BooleanField(db_index=True, default=False)),
                ('storytime', models.TextField(blank=True, null=True)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('state', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('complete', 'Complete'), ('expired', 'Expired')], default='pending', max_length=16)),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='survey.Survey')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Survey Response',
                'verbose_name_plural': 'Survey Responses',
            },
        ),
    ]
